## basically combining the output of the tmake from the original project
## directory and combining it with the PKG_LIBS directive from the Rcpp
## example (adding -lz -lm)


## Use the R_HOME indirection to support installations of multiple R version
#PKG_LIBS = `$(R_HOME)/bin/Rscript -e "Rcpp:::LdFlags()"`

PKG_LIBS = -L/home/martin/R/x86_64-unknown-linux-gnu-library/3.0/Rcpp/lib -lRcpp -Wl,-rpath,/home/martin/R/x86_64-unknown-linux-gnu-library/3.0/Rcpp/lib -lm -lz
 
## the PKG_LIBS above can be autogenerated by 
## PKG_LIBS = `$(R_HOME)/bin/Rscript -e "Rcpp:::LdFlags()"`
## and the above is just the result of me running it as myself.
## and appending -lm -lz (should automate this at later stages)

HEADERS =	util/ByteReader.h \
		read_big/BigHeader.h \
		read_big/ZoomHeader.h \
		read_big/TotalSummary.h \
		read_big/ChromosomeBTree.h \
		read_big/ChromosomeNode.h \
		read_big/R_Tree.h \
		read_big/R_TreeNode.h \
		read_big/BigWigSegment.h \
		read_big/DataSegment.h \
		read_big/BigFile.h \
		export_structures/WigSegment.h \
		BbiParser.h \
		rcpp_hello_world.h
SOURCES =	util/ByteReader.cpp \
		read_big/BigHeader.cpp \
		read_big/ZoomHeader.cpp \
		read_big/TotalSummary.cpp \
		read_big/ChromosomeBTree.cpp \
		read_big/ChromosomeNode.cpp \
		read_big/R_Tree.cpp \
		read_big/R_TreeNode.h \
		read_big/BigWigSegment.cpp \
		read_big/DataSegment.cpp \
		read_big/BigFile.cpp \
		export_structures/WigSegment.cpp \
		BbiParser.cpp \
		rcpp_hello_world.cpp

OBJECTS =	util/ByteReader.o \
		read_big/BigHeader.o \
		read_big/ZoomHeader.o \
		read_big/TotalSummary.o \
		read_big/ChromosomeBTree.o \
		read_big/ChromosomeNode.o \
		read_big/R_Tree.o \
		read_big/R_TreeNode.o \
		read_big/BigWigSegment.o \
		read_big/DataSegment.o \
		read_big/BigFile.o \
		export_structures/WigSegment.o \
		BbiParser.o \
		rcpp_hello_world.o

PKG_CPPFLAGS=-I.


all: $(SHLIB)

clean:
	@rm -f $(OBJECTS)
